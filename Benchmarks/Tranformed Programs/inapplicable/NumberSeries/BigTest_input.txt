------>1 1
getting terminating path constraints
map2
Set of Constraints for this dataset V:
Non-terminating:
path constraint: {s = x2}	 effect: {x3_1 = s, x3_2 = 1} ---------
terminating:

java.lang.ArrayIndexOutOfBoundsException: 1
	at symexScala.PathEffect$$anonfun$conjunctPathEffect$1.apply(PathEffect.scala:163)
	at symexScala.PathEffect$$anonfun$conjunctPathEffect$1.apply(PathEffect.scala:160)
	at scala.collection.immutable.Range.foreach(Range.scala:160)
	at symexScala.PathEffect.conjunctPathEffect(PathEffect.scala:160)
	at symexScala.SymbolicResult$$anonfun$map$2$$anonfun$apply$2.apply(SymbolicResult.scala:261)
	at symexScala.SymbolicResult$$anonfun$map$2$$anonfun$apply$2.apply(SymbolicResult.scala:254)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)
	at symexScala.SymbolicResult$$anonfun$map$2.apply(SymbolicResult.scala:254)
	at symexScala.SymbolicResult$$anonfun$map$2.apply(SymbolicResult.scala:253)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)
	at symexScala.SymbolicResult.map(SymbolicResult.scala:253)
	at gov.nasa.jpf.JPF.computeSym(JPF.java:192)
	at gov.nasa.jpf.JPF.computeSym(JPF.java:172)
	at gov.nasa.jpf.JPF.runJPFWithBtest(JPF.java:261)
	at gov.nasa.jpf.JPF.start(JPF.java:305)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at gov.nasa.jpf.tool.Run.call(Run.java:80)
	at gov.nasa.jpf.tool.RunJPF.main(RunJPF.java:116)


Reason:

	public static SymbolicResult computeSym(SymbolicState state , JPFDAGNode node , String modelDir ) {
		SymbolicResult[] results= new SymbolicResult[node.getParents().length];
		int i = 0;
		for(JPFDAGNode p :  node.getParents()) {	
*			results[i] = computeSym(state , p ,  modelDir);
			i++;
		}

		case "map": 
			 args_new[0] = modelDir + node.getOperatorName() + ".jpf";		
			 conf1 = createConfig(args_new);
			 jpf = new JPF(conf1);
			jpf.run();
			 udfResult  = jpf.pfl.convertAll(state,"");
			 System.out.println(node.getOperatorName()+"\n"+udfResult.toString());
*			return  results[0].map(udfResult);

Too many symbolic states, ArrayIndexOutofBounds
